$date
   Sat Jun  7 22:43:15 2025
$end
$version
  2022.2
$end
$timescale
  1ps
$end
$scope module tb_clock_gating $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # trig $end
$var wire 8 $ counter_normal [7:0] $end
$var wire 8 % counter_gated [7:0] $end
$var wire 2 & fsm_state [1:0] $end
$var wire 1 ' clock_enabled $end
$var wire 8 ( power_savings [7:0] $end
$var wire 16 ) normal_cycles [15:0] $end
$var wire 16 * gated_cycles [15:0] $end
$var reg 64 + state_name [63:0] $end
$scope module dut $end
$var wire 1 , clk $end
$var wire 1 - rst $end
$var wire 1 . trig $end
$var wire 8 $ counter_normal [7:0] $end
$var wire 8 % counter_gated [7:0] $end
$var wire 2 & fsm_state [1:0] $end
$var wire 1 ' clock_enabled $end
$var wire 8 ( power_savings_percent [7:0] $end
$var wire 16 ) normal_cycles [15:0] $end
$var wire 16 * gated_cycles [15:0] $end
$var wire 1 / gated_clk $end
$var wire 1 0 enable_clk $end
$var wire 16 1 normal_clk_cycles [15:0] $end
$var wire 16 2 gated_clk_cycles [15:0] $end
$scope module fsm_inst $end
$var wire 1 , clk $end
$var wire 1 - rst $end
$var wire 1 . trig $end
$var reg 1 3 enable_clk $end
$var wire 1 / gated_clk $end
$var wire 2 & current_state [1:0] $end
$var reg 2 4 state [1:0] $end
$var reg 2 5 next_state [1:0] $end
$var reg 1 6 enable_clk_ff $end
$upscope $end
$scope module normal_counter $end
$var wire 1 , clk $end
$var wire 1 - rst $end
$var wire 1 7 enable $end
$var reg 8 8 counter [7:0] $end
$upscope $end
$scope module gated_counter $end
$var wire 1 / clk $end
$var wire 1 - rst $end
$var wire 1 9 enable $end
$var reg 8 : counter [7:0] $end
$upscope $end
$scope module pwr_mon $end
$var wire 1 , clk $end
$var wire 1 - rst $end
$var wire 1 ; normal_clk_active $end
$var wire 1 0 gated_clk_active $end
$var reg 16 < normal_clk_cycles [15:0] $end
$var reg 16 = gated_clk_cycles [15:0] $end
$var wire 8 ( power_savings_percent [7:0] $end
$var wire 16 > savings [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
0#
b0 $
b0 %
b0 &
0'
b0 (
b0 )
b0 *
b1001001010001000100110001000101001000000010000000100000 +
0,
1-
0.
0/
00
b0 1
b0 2
03
b0 4
b0 5
06
17
b0 8
19
b0 :
1;
b0 <
b0 =
b0 >
$end
#5000
1!
1,
0/
#10000
0!
0,
0/
#15000
1!
1,
0/
#20000
0!
0"
0,
0-
0/
#25000
1!
b1 $
b1100100 (
b1 )
1,
0/
b1 1
b1 8
b1 <
b1 >
#30000
0!
1#
0,
1.
0/
b1 5
#35000
1!
b10 $
b1 &
1'
b1100100 (
b10 )
b1000001010000110101010001001001010101100100010100100000 +
1,
0/
10
b10 1
13
b1 4
b10 8
b10 <
b10 >
#40000
0!
0,
0/
#45000
1!
b11 $
b1 %
b1000010 (
b11 )
b1 *
1,
1/
b11 1
b1 2
16
b11 8
b1 :
b11 <
b1 =
b10 >
#50000
0!
0,
0/
#55000
1!
b100 $
b10 %
b110010 (
b100 )
b10 *
1,
1/
b100 1
b10 2
b100 8
b10 :
b100 <
b10 =
b10 >
#60000
0!
0#
0,
0.
0/
b11 5
#65000
1!
b101 $
b11 %
b11 &
b101000 (
b101 )
b11 *
b1010111010000010100100101010100001000000010000000100000 +
1,
1/
b101 1
b11 2
13
b11 4
b10 5
b101 8
b11 :
b101 <
b11 =
b10 >
#70000
0!
0,
0/
#75000
1!
b110 $
b100 %
b10 &
0'
b100001 (
b110 )
b100 *
b1010011010011000100010101000101010100000010000000100000 +
1,
1/
00
b110 1
b100 2
03
b10 4
b110 8
b100 :
b110 <
b100 =
b10 >
#80000
0!
0,
0/
#85000
1!
b111 $
b101 %
b101010 (
b111 )
1,
0/
b111 1
06
b111 8
b101 :
b111 <
b11 >
#90000
0!
0,
0/
#95000
1!
b1000 $
b110010 (
b1000 )
1,
0/
b1000 1
b1000 8
b1000 <
b100 >
#100000
0!
0,
0/
#105000
1!
b1001 $
b110111 (
b1001 )
1,
0/
b1001 1
b1001 8
b1001 <
b101 >
#110000
0!
0,
0/
#115000
1!
b1010 $
b111100 (
b1010 )
1,
0/
b1010 1
b1010 8
b1010 <
b110 >
#120000
0!
0,
0/
#125000
1!
b1011 $
b111111 (
b1011 )
1,
0/
b1011 1
b1011 8
b1011 <
b111 >
#130000
0!
1#
0,
1.
0/
b1 5
#135000
1!
b1100 $
b1 &
1'
b1000010 (
b1100 )
b1000001010000110101010001001001010101100100010100100000 +
1,
0/
10
b1100 1
13
b1 4
b1100 8
b1100 <
b1000 >
#140000
0!
0,
0/
#145000
1!
b1101 $
b110 %
b111101 (
b1101 )
b101 *
1,
1/
b1101 1
b101 2
16
b1101 8
b110 :
b1101 <
b101 =
b1000 >
#150000
0!
0#
0,
0.
0/
b11 5
#155000
1!
b1110 $
b111 %
b11 &
b111001 (
b1110 )
b110 *
b1010111010000010100100101010100001000000010000000100000 +
1,
1/
b1110 1
b110 2
13
b11 4
b10 5
b1110 8
b111 :
b1110 <
b110 =
b1000 >
#160000
0!
1#
0,
1.
0/
b1 5
#165000
1!
b1111 $
b1000 %
b1 &
b110101 (
b1111 )
b111 *
b1000001010000110101010001001001010101100100010100100000 +
1,
1/
b1111 1
b111 2
13
b1 4
b1111 8
b1000 :
b1111 <
b111 =
b1000 >
#170000
0!
0,
0/
#175000
1!
b10000 $
b1001 %
b110010 (
b10000 )
b1000 *
1,
1/
b10000 1
b1000 2
b10000 8
b1001 :
b10000 <
b1000 =
b1000 >
#180000
0!
0,
0/
#185000
1!
b10001 $
b1010 %
b101111 (
b10001 )
b1001 *
1,
1/
b10001 1
b1001 2
b10001 8
b1010 :
b10001 <
b1001 =
b1000 >
#190000
0!
0#
0,
0.
0/
b11 5
#195000
1!
b10010 $
b1011 %
b11 &
b101100 (
b10010 )
b1010 *
b1010111010000010100100101010100001000000010000000100000 +
1,
1/
b10010 1
b1010 2
13
b11 4
b10 5
b10010 8
b1011 :
b10010 <
b1010 =
b1000 >
#200000
0!
0,
0/
#205000
1!
b10011 $
b1100 %
b10 &
0'
b101010 (
b10011 )
b1011 *
b1010011010011000100010101000101010100000010000000100000 +
1,
1/
00
b10011 1
b1011 2
03
b10 4
b10011 8
b1100 :
b10011 <
b1011 =
b1000 >
#210000
0!
0,
0/
#215000
1!
b10100 $
b1101 %
b101101 (
b10100 )
1,
0/
b10100 1
06
b10100 8
b1101 :
b10100 <
b1001 >
#220000
0!
0,
0/
#225000
1!
b10101 $
b101111 (
b10101 )
1,
0/
b10101 1
b10101 8
b10101 <
b1010 >
#230000
0!
0,
0/
